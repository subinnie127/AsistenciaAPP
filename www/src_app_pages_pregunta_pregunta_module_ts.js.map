{"version":3,"file":"src_app_pages_pregunta_pregunta_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAER;AAE/C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wDAAY;KACxB;CACF,CAAC;IAMW,yBAAyB,SAAzB,yBAAyB;CAAG;AAA5B,yBAAyB;IAJrC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,yBAAyB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBG;AACM;AACF;AAEA;AAEyB;AAEvB;IAWlC,kBAAkB,SAAlB,kBAAkB;CAAG;AAArB,kBAAkB;IAT9B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,+EAAyB;SAC1B;QACD,YAAY,EAAE,CAAC,wDAAY,CAAC;KAC7B,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjB/B;AACA;AACA;AACA;IAQaK,YAAY,SAAZA,YAAY;EAQvB;;;;;;;;;;EAWCC,YACaC,WADb,EAEaC,MAFb,EAGaC,eAHb,EAG6C;IAFhC;IACA;IACA;IAlBP,eAAmB,IAAIL,mDAAJ,EAAnB;IAEA,iBAAmB,EAAnB,CAgBuC,CAE5C;;IACA,KAAKG,WAAL,CAAiBG,WAAjB,CAA6BC,SAA7B,CAAuCC,MAAM,IAAG;MAC9C,IAAI,KAAKJ,MAAL,CAAYK,oBAAZ,GAAmCC,MAAnC,CAA0CC,KAA9C,EAAqD;QAAE;QAErD;QACA,KAAKC,OAAL,GAAe,KAAKR,MAAL,CAAYK,oBAAZ,GAAmCC,MAAnC,CAA0CC,KAA1C,CAAgDC,OAA/D;MAED,CALD,MAKO;QACL;;;;;QAKA,KAAKR,MAAL,CAAYS,QAAZ,CAAqB,CAAC,QAAD,CAArB;MACD;IACJ,CAdC;EAeH;;EAEMC,QAAQ,IACd;;EAGQC,mBAAmB;IAExB;IACA,IAAI,KAAKH,OAAL,CAAaI,gBAAb,CAA8BC,IAA9B,OAAyC,KAAKC,SAAlD,EAA6D;MAC3D,KAAKC,YAAL,CAAkB,UAAlB,EAA8B,sBAC1B,KAAKP,OAAL,CAAaQ,QADjB;MAEA;IACD,CAPuB,CASxB;;;IACA,IAAIC,OAAO,GAAG,0DAAd;IAEA,KAAKF,YAAL,CAAkB,YAAlB,EAAgCE,OAAhC;EACD,CA3DsB,CA4DvB;;;EACaF,YAAY,CAACG,MAAD,EAAiBD,OAAjB,EAAgC;IAAA;;IAAA;MACvD,MAAME,KAAK,SAAS,KAAI,CAAClB,eAAL,CAAqBmB,MAArB,CAA4B;QAC9CC,MAAM,EAAEH,MADsC;QAE9CI,OAAO,EAAEL,OAFqC;QAG9CM,OAAO,EAAE,CAAC,IAAD;MAHqC,CAA5B,CAApB;MAMA,MAAMJ,KAAK,CAACK,OAAN,EAAN;IAPuD;EAQxD;;AArEsB;;;QAVhB/B,2DAAcA;;QAAoBC,mDAAMA;;QACxCC,2DAAeA;;;AASXE,YAAY,sDALxBL,wDAAS,CAAC;EACTiC,QAAQ,EAAE,cADD;EAETC,UAAAA,2DAFS;;AAAA,CAAD,CAKe,GAAZ7B,YAAY,CAAZ","sources":["./src/app/pages/pregunta/pregunta-routing.module.ts","./src/app/pages/pregunta/pregunta.module.ts","./src/app/pages/pregunta/pregunta.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PreguntaPage } from './pregunta.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PreguntaPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PreguntaPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PreguntaPageRoutingModule } from './pregunta-routing.module';\n\nimport { PreguntaPage } from './pregunta.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PreguntaPageRoutingModule\n  ],\n  declarations: [PreguntaPage]\n})\nexport class PreguntaPageModule {}\n","import { ToastController } from '@ionic/angular';\nimport { Usuario } from 'src/app/model/Usuario';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { Persona } from '../../model/Persona';\n\n\n@Component({\n  selector: 'app-pregunta',\n  templateUrl: './pregunta.page.html',\n  styleUrls: ['./pregunta.page.scss'],\n})\nexport class PreguntaPage implements OnInit {\n\n  public usuario: Usuario;\n\n  public persona: Persona = new Persona();\n\n  public respuesta: string =\"\";\n\n  /*\n    En el constructor del HomePage se ponen como parametros los siguientes objetos:\n      (1) activeroute (del tipo de dato ActivatedRoute) y router (del tipo de dato Router),\n      que se usarán para obtener los datos enviados por la página que invocó a \"home\".\n      (2) alertController (del tipo de dato AlertController), que se usará para mostrar\n      mensajes emergentes en la pantalla.\n\n    Nótese que los parámetros tuvieron que declararse con \"private\", y esto es necesario\n    para que los parámetros pasen a considerarse automáticamente como propiedades\n    de la clase \"HomePage\" y de este modo puedan usarse dentro de los otros métodos.\n   */\n   constructor(\n        private activeroute: ActivatedRoute\n      , private router: Router\n      , private alertController: AlertController) {\n\n    // Se llama a la ruta activa y se obtienen sus parámetros mediante una subscripcion\n    this.activeroute.queryParams.subscribe(params => {       // Utilizamos expresión lambda\n      if (this.router.getCurrentNavigation().extras.state) { // Validar que tenga datos extras\n\n        // Si tiene datos extra, se rescatan y se asignan a una propiedad\n        this.usuario = this.router.getCurrentNavigation().extras.state.usuario;\n\n      } else {\n        /*\n          Si no vienen datos extra desde la página anterior, quiere decir que el usuario\n          intentó entrar directamente a la página home sin pasar por el login,\n          de modo que el sistema debe enviarlo al login para que inicie sesión.\n        */\n        this.router.navigate(['/login']);\n      }\n  });\n}\n\npublic ngOnInit() {\n}\n\n\n  public mostrarDatosPersona(): void {\n\n    // Si el usuario no ingresa al menos el nombre o el apellido, se mostrará un error\n    if (this.usuario.respuestaSecreta.trim() === this.respuesta) {\n      this.presentAlert('CORRECTO', 'TU CONTRASEÑA ES '\n        + this.usuario.password);\n      return;\n    }\n\n    // Mostrar un mensaje emergente con los datos de la persona\n    let mensaje = '¡LO SENTIMOS PERO LOS DATOS INGRESADOS NO SON CORRECTOS!';\n\n    this.presentAlert('INCORRECTO', mensaje);\n  }\n  // Este método sirve para mostrar el mensaje emergente\n  public async presentAlert(titulo: string, mensaje: string) {\n    const alert = await this.alertController.create({\n      header: titulo,\n      message: mensaje,\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n}\n"],"names":["Component","ActivatedRoute","Router","AlertController","Persona","PreguntaPage","constructor","activeroute","router","alertController","queryParams","subscribe","params","getCurrentNavigation","extras","state","usuario","navigate","ngOnInit","mostrarDatosPersona","respuestaSecreta","trim","respuesta","presentAlert","password","mensaje","titulo","alert","create","header","message","buttons","present","selector","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}